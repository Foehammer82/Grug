stages:
  - test
  - build
  - deploy

pre-commit:
  stage: test
  image: python:3.11
  tags:
    - docker
  script:
    - pip install pre-commit
    - pre-commit run --all-files

unit-tests:
  stage: test
  image: python:3.11
  tags:
    - docker
  script:
    - pip install poetry
    - poetry install
    - poetry run python -m pytest --cov grug --cov-report term --cov-report xml:coverage.xml --junitxml=report.xml tests/unit
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'

build-docker-image:
  stage: build
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  tags:
    - kronos
  script:
    - docker build -t $CI_REGISTRY_IMAGE:latest .

publish-docker-image:
  stage: build
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  tags:
    - kronos
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:latest
  needs:
    - build-docker-image

deploy-prod:
  stage: deploy
  tags:
    - kronos
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - docker compose up -d --pull always --remove-orphans application
  needs:
    - publish-docker-image

# TODO: add a tag and release step https://python-poetry.org/docs/cli#version
